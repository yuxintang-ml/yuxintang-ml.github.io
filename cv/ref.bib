@inproceedings{10.1145/3148675.3148720,
	title        = {Exploring Simulation of Software-Defined Underwater Wireless Networks},
	author       = {Wei, Li and Tang, Yuxin and Cao, Yuching and Wang, Zhaohui and Gerla, Mario},
	year         = 2017,
	booktitle    = {Proceedings of the International Conference on Underwater Networks &amp; Systems},
	location     = {Halifax, NS, Canada},
	publisher    = {Association for Computing Machinery},
	address      = {New York, NY, USA},
	series       = {WUWNET'17},
	doi          = {10.1145/3148675.3148720},
	isbn         = 9781450355612,
	url          = {https://doi.org/10.1145/3148675.3148720},
	abstract     = {Multi-modal communication methods have been proposed for underwater wireless networks (UWNs) to tackle the challenging physical characteristics of underwater wireless channels. These include the use of acoustic and optic technology for range-dependent transmissions. Software-defined networking (SDN) is an appealing choice for managing these networks with multi-modal communication capabilities, allowing for increased adaptability in the UWN design. In this work, we develop a simulation platform for software-defined underwater wireless networks (SDUWNs). Similarto OpenNet, this platform integrates Mininet with ns-3 via TapBridge modules. The multi-modal communication is implemented by equipping each ns-3 node with multiple net devices. Multiple channel modules connecting corresponding net devices are configured to reflect the channel characteristics. The proposed simulation platform is validated in a case study for oceanographic data collection.},
	articleno    = 21,
	numpages     = 5,
	keywords     = {Software-Defined Networks, Underwater Wireless Networks, Simulation Platform},
}
@inproceedings{osdi18-tang,
	title        = {A Programmable, Hardware-Assisted Network Protocol Fuzzer},
	author       = {Tang, Yuxin and and Chen, Ang},
	booktitle    = {Proceedings of the 13th USENIX Conference on Operating Systems Design and Implementation},
	location     = {Carlsbad, CA, USA},
	series       = {OSDI'18},
}
@inproceedings{10.5555/3489212.3489246,
	title        = {Programmable In-Network Security for Context-Aware BYOD Policies},
	author       = {Kang, Qiao and Xue, Lei and Morrison, Adam and Tang, Yuxin and Chen, Ang and Luo, Xiapu},
	year         = 2020,
	booktitle    = {Proceedings of the 29th USENIX Conference on Security Symposium},
	publisher    = {USENIX Association},
	address      = {USA},
	isbn         = {978-1-939133-17-5},
	abstract     = {Bring Your Own Device (BYOD) has become the new norm for enterprise networks, but BYOD security remains a top concern. Context-aware security, which enforces access control based on dynamic runtime context, is a promising approach. Recent work has developed SDN solutions to collect device contexts and enforce access control at a central controller. However, the central controller could become a bottleneck and attack target. Processing context signals at the remote controller is also too slow for real-time decision change.We present a new paradigm, programmable in-network security (Poise), which is enabled by the emergence of programmable switches. At the heart of Poise is a novel security primitive, which can be programmed to support a wide range of context-aware policies in hardware. Users of Poise specify concise policies, and Poise compiles them into different configurations of the primitive in P4. Compared with traditional SDN defenses, Poise is resilient to control plane saturation attacks, and it dramatically increases defense agility.},
	articleno    = 34,
	numpages     = 18
}
@inproceedings{10.14778/3457390.3457399,
	title        = {Tensor Relational Algebra for Distributed Machine Learning System Design},
	author       = {Yuan, Binhang and Jankov, Dimitrije and Zou, Jia and Tang, Yuxin and Bourgeois, Daniel and Jermaine, Chris},
	year         = 2021,
	month        = {apr},
	journal      = {Proc. VLDB Endow.},
	publisher    = {VLDB Endowment},
	volume       = 14,
	number       = 8,
	pages        = {1338-1350},
	doi          = {10.14778/3457390.3457399},
	issn         = {2150-8097},
	url          = {https://doi.org/10.14778/3457390.3457399},
	issue_date   = {April 2021},
	abstract     = {We consider the question: what is the abstraction that should be implemented by the computational engine of a machine learning system? Current machine learning systems typically push whole tensors through a series of compute kernels such as matrix multiplications or activation functions, where each kernel runs on an AI accelerator (ASIC) such as a GPU. This implementation abstraction provides little built-in support for ML systems to scale past a single machine, or for handling large models with matrices or tensors that do not easily fit into the RAM of an ASIC. In this paper, we present an alternative implementation abstraction called the tensor relational algebra (TRA). The TRA is a set-based algebra based on the relational algebra. Expressions in the TRA operate over binary tensor relations, where keys are multi-dimensional arrays and values are tensors. The TRA is easily executed with high efficiency in a parallel or distributed environment, and amenable to automatic optimization. Our empirical study shows that the optimized TRA-based back-end can significantly outperform alternatives for running ML workflows in distributed clusters.},
	numpages     = 13
}
